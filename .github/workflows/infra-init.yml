
name: init ACA infrastructure

on:
    push:
        branches:
            - main
        paths:
            - ".github/workfflows/infra-init.yml"
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write
env:
    resourceGroupName: "ORLEANS-ACA"
    location: "westeurope"
    appName: "identitykeeper-app"
    siloName: "identitykeeper-server"
    dashboardName: "identitykeeper-dashboard"
    imageApp: "${{ secrets.DOCKER_USERNAME }}/identitykeeper-client:latest"
    imageSilo: "${{ secrets.DOCKER_USERNAME }}/identitykeeper-server:latest"
    imageDashboard: "${{ secrets.DOCKER_USERNAME }}/identitykeeper-dashboard:latest"
    registryUsername: "${{ secrets.DOCKER_USERNAME }}"
    registryPassword: ${{ secrets.DOCKER_PASSWORD }}
    environmentName: "identitykeeperEnv"
    AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

jobs:
    create-ACA:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Azure Login
              uses: Azure/login@v1.4.6
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: install extension az containerapp
              run: az extension add --name containerapp
            - name: create ACA-Environment
              run: |
                az containerapp env create -g ${{ env.resourceGroupName }} -n ${{ env.environmentName }} --logs-destination none
            - name: create ACA silo 
              run: |
                az containerapp create \
                    --resource-group ${{ env.resourceGroupName }} \
                    --name ${{ env.siloName }} \
                    --image ${{ env.imageSilo }} \
                    --registry-server docker.io \
                    --registry-username ${{ env.registryUsername }} \
                    --registry-password ${{ env.registryPassword }} \
                    --environment ${{ env.environmentName }} \
                    --min-replicas 1 \
                    --env-vars "AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}
            - name: create ACA app
              run: |
                az containerapp create \
                --resource-group ${{ env.resourceGroupName }} \
                --name ${{ env.appName }} \
                --image ${{ env.imageApp }} \
                --registry-server docker.io \
                --registry-username ${{ env.registryUsername }} \
                --registry-password ${{ env.registryPassword }} \
                --target-port 8080 \
                --ingress external \
                --environment ${{ env.environmentName }} \
                --env-vars "AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}
            - name: create ACA Dashboard
              run: |
                az containerapp create \
                --resource-group ${{ env.resourceGroupName }} \
                --name ${{ env.dashboardName }} \
                --image ${{ env.imageDashboard }} \
                --registry-server docker.io \
                --registry-username ${{ env.registryUsername }} \
                --registry-password ${{ env.registryPassword }} \
                --target-port 8080 \
                --ingress external \
                --environment ${{ env.environmentName }} \
                --env-vars "AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}
