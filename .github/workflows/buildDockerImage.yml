name: "IdentityKeeper Docker image"

on:
  push:
    paths:
      - 'Dockerfile.Api'
      - 'Dockerfile.Silo'
      - 'Api/**'
      - 'silo/**'
      - 'Dashboard/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
env:
    #create image tag either for master branch or for any other branch
    IMAGE_TAG: ${{ github.ref == 'refs/heads/main' && 'latest' || github.sha }}
    resourceGroupName: "ORLEANS-ACA"
    location: "westeurope"
    appName: "identitykeeper-app"
    siloName: "identitykeeper-server"
    dashboardName: "identitykeeper-dashboard"
    imageApp: "${{ secrets.DOCKER_USERNAME }}/identitykeeper-client"
    imageSilo: "${{ secrets.DOCKER_USERNAME }}/identitykeeper-server"
    imageDashboard: "${{ secrets.DOCKER_USERNAME }}/identitykeeper-dashboard"
    registryUsername: "${{ secrets.DOCKER_USERNAME }}"
    registryPassword: ${{ secrets.DOCKER_PASSWORD }}
    environmentName: "identitykeeperEnv"
    AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

jobs:
    build-app-image:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Build Docker image
              run: |
                docker build -f ./Dockerfile.Api -t ${{ env.appName }} . 
            - name: Tag Docker image
              run: |
                docker tag ${{ env.appName }} ${{ env.imageApp }}:${{ env.IMAGE_TAG }} 
            - name: Login to DockerHub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            - name: Push Docker image
              run: |
                docker push ${{ env.imageApp }}:${{ env.IMAGE_TAG }} 
    build-server-image:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Build Docker image
              run: |
                docker build -f ./Dockerfile.Silo -t ${{ env.siloName }} . 
            - name: Tag Docker image
              run: |
                docker tag ${{ env.siloName }} ${{ env.imageSilo }}:${{ env.IMAGE_TAG }} 
            - name: Login to DockerHub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            - name: Push Docker image
              run: |
                docker push ${{ env.imageSilo }}:${{ env.IMAGE_TAG }} 
    build-dashboard-image:
          runs-on: ubuntu-latest
          steps:
              - uses: actions/checkout@v3
              - name: Build Docker image
                run: |
                  docker build -f ./Dockerfile.Dashb -t ${{ env.dashboardName }} .
              - name: Tag Docker image
                run: |
                  docker tag ${{ env.dashboardName }} ${{ env.imageDashboard }}:${{ env.IMAGE_TAG }}
              - name: Login to DockerHub
                run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              - name: Push Docker image
                run: |
                  docker push ${{ env.imageDashboard }}:${{ env.IMAGE_TAG }}
    update-ACA:
        runs-on: ubuntu-latest
        needs: [build-app-image, build-server-image, build-dashboard-image]
        steps:
            - uses: actions/checkout@v3
            - name: Azure Login
              uses: Azure/login@v1.4.6
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: install extension az containerapp
              run: az extension add --name containerapp
            - name: Update ACA
              run: |
                az containerapp update -n ${{ env.siloName }} -g ${{ env.resourceGroupName }} --image ${{ env.imageSilo }}:${{ env.IMAGE_TAG }} && \
                az containerapp update -n ${{ env.appName }} -g ${{ env.resourceGroupName }} --image ${{ env.imageApp }}:${{ env.IMAGE_TAG }} && \
                az containerapp update -n ${{ env.dashboardName }} -g ${{ env.resourceGroupName }} 